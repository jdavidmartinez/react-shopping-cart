[{"/home/david/Desktop/workBench/JavaScript/React/react-shopping-cart/react-shopping-cart/src/index.tsx":"1","/home/david/Desktop/workBench/JavaScript/React/react-shopping-cart/react-shopping-cart/src/App.tsx":"2","/home/david/Desktop/workBench/JavaScript/React/react-shopping-cart/react-shopping-cart/src/Item/Item.tsx":"3","/home/david/Desktop/workBench/JavaScript/React/react-shopping-cart/react-shopping-cart/src/App.styles.tsx":"4","/home/david/Desktop/workBench/JavaScript/React/react-shopping-cart/react-shopping-cart/src/Item/Item.style.tsx":"5"},{"size":309,"mtime":1611538841516,"results":"6","hashOfConfig":"7"},{"size":1988,"mtime":1611799872592,"results":"8","hashOfConfig":"7"},{"size":660,"mtime":1611798523215,"results":"9","hashOfConfig":"7"},{"size":267,"mtime":1611969901289,"results":"10","hashOfConfig":"7"},{"size":538,"mtime":1611969897765,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"19exei1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/david/Desktop/workBench/JavaScript/React/react-shopping-cart/react-shopping-cart/src/index.tsx",[],["25","26"],"/home/david/Desktop/workBench/JavaScript/React/react-shopping-cart/react-shopping-cart/src/App.tsx",["27","28","29"],"import {useState} from 'react';\nimport {useQuery} from 'react-query';\n//Components\nimport Item from './Item/Item';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from'@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n//Styles\nimport {Wrapper, StyledButton} from './App.styles'\nimport { type } from 'os';\n//types\nexport type CartItemType ={\n  mode: 'no-cors';\n  id:number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\nconst getProducts = async (): Promise <CartItemType[]> => \n    await (await fetch('http://fakestoreapi.com/products')).json();\n\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const {data, isLoading, error}= useQuery<CartItemType[]>('products',\n  getProducts\n  );\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) => \n    items.reduce((ack: number, item) => ack + item.amount, 0);\n    \n  const handleAddToCart = (clickedItem: CartItemType) => null;\n  const handleRemoveFromCart = () => null;\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong...</div>;\n  \n\n  return  (\n    <Wrapper>\n      <Drawer anchor='right' open= {cartOpen} onClose={()=> setCartOpen(false)}>\n        Cart goes here\n      </Drawer>\n      <StyledButton onClick={()=> setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>  \n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item  key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n          \n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","/home/david/Desktop/workBench/JavaScript/React/react-shopping-cart/react-shopping-cart/src/Item/Item.tsx",["30"],"import { formatMs } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n//Types\nimport {CartItemType} from '../App';\n//Styles\nimport {Wrapper} from './Item.style';\n\ntype Props  ={\n    item: CartItemType;\n    handleAddToCart:(clickedItem: CartItemType) => void;\n}\n\nconst Item: React.FC<Props> = ({item,handleAddToCart})=>(\n    <Wrapper>\n        <img src={item.image} alt={item.title} />\n        <div>\n            <h3>{item.title}</h3>\n            <p>{item.description}</p>\n            <h3>${item.price}</h3>\n        </div>\n        <Button onClick={() => handleAddToCart(item)}>Add to Cart</Button>\n    </Wrapper>\n)\n\nexport default Item;    ","/home/david/Desktop/workBench/JavaScript/React/react-shopping-cart/react-shopping-cart/src/App.styles.tsx",[],"/home/david/Desktop/workBench/JavaScript/React/react-shopping-cart/react-shopping-cart/src/Item/Item.style.tsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":12,"column":10,"nodeType":"37","messageId":"38","endLine":12,"endColumn":14},{"ruleId":"35","severity":1,"message":"39","line":30,"column":21,"nodeType":"37","messageId":"38","endLine":30,"endColumn":33},{"ruleId":"35","severity":1,"message":"40","line":40,"column":9,"nodeType":"37","messageId":"38","endLine":40,"endColumn":29},{"ruleId":"35","severity":1,"message":"41","line":1,"column":10,"nodeType":"37","messageId":"38","endLine":1,"endColumn":18},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"@typescript-eslint/no-unused-vars","'type' is defined but never used.","Identifier","unusedVar","'setCartItems' is assigned a value but never used.","'handleRemoveFromCart' is assigned a value but never used.","'formatMs' is defined but never used.","no-global-assign","no-unsafe-negation"]